description: >
        Represents a physical, logical, or financial asset owned or managed by the organization. Base type for specific asset classes. Inherits standard entity fields. Includes optional mixin interfaces via `anyOf`.
allOf:
- $ref: "../index.yaml#/components/schemas/cEntity"
- type: object
  properties:
    name:
      type: string
      description: Common name or description of the asset.
      example: "Forklift #123"
    description:
      type: string
      description: Detailed description
    isActive:
      type: boolean
      description: Flag indicating if the asset is currently active or in service.
      default: true
    activatedAt:
      type: string
      format: date-time
      description: Optional date/time when the asset was put into service or became active.
    deactivatedAt:
      type: string
      format: date-time
      nullable: true
      description: Optional date/time when the asset was taken out of service or deactivated.
    organization:
      description: Reference to the Organization that owns or is primarily responsible for the asset.
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        - $ref: "../index.yaml#/components/schemas/Organization"
    site:
      description: Optional reference to the primary Site where the asset is located.
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        - $ref: "../index.yaml#/components/schemas/Site"
    # location:
    #   description: Optional reference to the specific Location (possibly more granular than Site) where the asset is currently situated.
    #   oneOf:
    #     - $ref: "../index.yaml#/components/schemas/iRelation"
    #     - $ref: "../index.yaml#/components/schemas/Location"
    parent:
      description: Optional reference to a parent asset in a hierarchy (e.g., engine part of a vehicle).
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        # Self-reference is correct here
        - $ref: "../index.yaml#/components/schemas/Asset"
    manufacturer:
      description: Optional reference to the Partner or Organization that manufactured the asset.
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        - $ref: "../index.yaml#/components/schemas/Partner"
    account:
      description: Optional reference to the primary Account associated with the asset.
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        - $ref: "../index.yaml#/components/schemas/Account"
    businessUnit:
      description: Optional reference to the Business Unit primarily associated with or responsible for the asset.
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        - $ref: "../index.yaml#/components/schemas/BusinessUnit"
    customer:
      description: Optional reference to the Partner (customer) associated with the asset (e.g., leased equipment).
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        - $ref: "../index.yaml#/components/schemas/Customer"
    criticality:
      description: Optional classification of the asset's criticality to operations. Uses taxonomy.
      oneOf:
        - $ref: "../index.yaml#/components/schemas/cRelation"
        - $ref: "../index.yaml#/components/schemas/AssetClassification"
    classifications:
      type: array
      items:
        description: Reference to a classification entry defining the asset's category, type, class, etc. Uses taxonomy.
        oneOf:
          - $ref: "../index.yaml#/components/schemas/cRelation"
          - $ref: "../index.yaml#/components/schemas/AssetClassification"
      description: >
        List of classifications applying to this asset (e.g., defining its class, type, group). Allows multiple classification hierarchies.
    notes:
      type: array
      items:
        allOf:
        - oneOf:
          - $ref: "../index.yaml#/components/schemas/cRelation"
          - $ref: "../index.yaml#/components/schemas/Note"
        - type: object
          properties:
            key:
              type: string
    make:
      type: string
      description: Make or brand of the asset.
      example: "Toyota"
    modelNumber:
      type: string
      description: Manufacturer's model number or identifier.
      example: "8FGCU25"
    identifiers:
      type: object
      properties:
        serialNumber:
          type: string
          description: Manufacturer's Serial Number.
          example: "TGN12345XYZ"
      # Allows other types of identifiers (part number, barcode, RFID tag, etc.)
      additionalProperties:
        type: string
      description: Object containing various identifiers for the asset, keyed by the identifier type (e.g., 'serialNumber', 'partNumber', 'barcode', 'rfid').
      example: { "serialNumber": "TGN12345XYZ", "barcode": "123456789012", "internalTag": "ASSET-007"}
